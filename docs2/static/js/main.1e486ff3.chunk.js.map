{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","c","type","value","onChange","target","onClick","GifGridItem","id","title","img","className","key","src","alt","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","images","downsized_medium","url","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"6MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,4BADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACwB,KAAtBJ,EAAWK,SAGfP,GAAc,SAACQ,GAAD,OAAQN,GAAR,mBAAsBM,OACpCL,EAAc,+BAKZ,2BACEM,KAAK,OACLC,MAAOR,EACPS,SAlBoB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,QAkBnBG,QAAS,WACPV,EAAc,SCvBXW,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,4DACb,yBAAKC,IAAKJ,EAAIK,IAAKH,EAAKI,IAAKL,IAC7B,2BAAIA,K,uBCeKM,EAnBF,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACKC,MAAM,gDAAD,OAHV,mCAGU,cACuCC,UAC3DH,GAFoB,cADV,cACRI,EADQ,gBAMSA,EAAKC,OANd,uBAMNC,EANM,EAMNA,KAEFC,EAAOD,EAAKE,KAAI,SAACd,GACrB,MAAO,CACLF,GAAIE,EAAIF,GACRC,MAAOC,EAAID,MACXC,IAAKA,EAAIe,OAAOC,iBAAiBC,QAZvB,kBAgBPJ,GAhBO,2CAAH,sDCmBEK,EAhBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPT,KAAMY,EACNL,SAAS,MAEV,WAEJ,CAACb,IAEGc,EDd2BM,CAAapB,GAAjCS,EADkB,EACxBH,KAAcO,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIlB,UAAU,mBAAmBK,GAChCa,GAAW,0CACZ,yBAAKlB,UAAU,aACZc,EAAOD,KAAI,SAACd,GAAD,OACV,kBAAC,EAAD,eAAaE,IAAKF,EAAIF,IAAQE,UEQzB2B,EAlBM,WAAO,IAAD,EACW3C,mBAAS,IADpB,mBAClB4C,EADkB,KACN7C,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG6C,EAAWd,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASJ,IAAKI,EAAUA,SAAUA,UCVtCuB,EAAUC,SAASC,eAAe,QAExCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.1e486ff3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"Escribe una categoría\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() === \"\") {\r\n      return;\r\n    }\r\n    setCategories((c) => [inputValue,...c ]);\r\n    setInputValue(\"Escribe una categoría\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        onClick={() => {\r\n          setInputValue(\"\");\r\n        }}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, img }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n      <img key={id} src={img} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","const API_KEY = \"Vz6gqwI5cUvZcfp251GgAEhqFmmdbwMy\";\r\n\r\nconst getGifs = async (category) => {\r\n  const resp = await fetch(\r\n    `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURI(\r\n      category\r\n    )}&limit=10`\r\n  );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      img: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n\r\nexport default getGifs;\r\n","import React from \"react\";\r\nimport { GifGridItem } from \"../components/GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__fadeIn\">{category}</h3>\r\n      {loading && <p>Cargando...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 1200);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifSearchApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./components/GifExpertApp\";\n\nconst divRoot = document.getElementById(\"root\");\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr/>>\n"],"sourceRoot":""}